# selectig the columns from 2 to 12
df2 <- df(,2:12)
# selectig the columns from 2 to 12
df2 <- df[,2:12]
df3 <- df$LHF
df <- as.data.frame(df2, LHF=df3)
head(df)
df <- read_excel("data/aprildata.xlsx")
# converting the data set from tibble to data frame
df <- as.data.frame(df)
# selectig the columns from 2 to 12
df2 <- df[,2:12]
df3 <- df$LHF
df <- as.data.frame(df2, LHF=df3)
head(df)
df <- as.data.frame(df2, LHF=as.data.frame(df3))
head(df)
df3
df <- as.data.frame(df2, LHF=as.data.frame(df3))
head(df2)
df3 <- as.data.frame(df3)
head(df3)
df <- as.data.frame(df2, df3)
df <- data.frame(df2, df3)
head(df)
# selectig the columns from 2 to 12
df2 <- df %>% select(LHF, 2:12)
df <- read_excel("data/aprildata.xlsx")
# converting the data set from tibble to data frame
df <- as.data.frame(df)
# selectig the columns from 2 to 12
# selectig the columns from 2 to 12
df2 <- df %>% select(LHF, 2:12)
head(df2)
# selectig the columns LHF & from 2 to 12
df <- df %>% select(LHF, 2:12)
df <- subset(df, complete.cases(df))
mynames <- c("LHF", "Heat_No", "LADLE_IN", "ARCING_START", "ARCING_END", "INITIAL_TEMP",
"FINAL_TEMP","Total_arcing_time", "C", "Si", "Mn", "S")
mynames <- tolower(mynames)
df <- df %>% select("lhf", "heat_no", "initial_temp", "final_temp",
"total_arcing_time", "c", "si", "mn", "s")
df <- read_excel("data/aprildata.xlsx")
# converting the data set from tibble to data frame
df <- as.data.frame(df)
# selectig the columns LHF & from 2 to 12
df <- df %>% select(LHF, 2:12)
df <- subset(df, complete.cases(df))
mynames <- c("LHF", "Heat_No", "LADLE_IN", "ARCING_START", "ARCING_END", "INITIAL_TEMP",
"FINAL_TEMP","Total_arcing_time", "C", "Si", "Mn", "S")
mynames <- tolower(mynames)
names(df) <- mynames
df <- df %>% select("lhf", "heat_no", "initial_temp", "final_temp",
"total_arcing_time", "c", "si", "mn", "s")
head(df)
?recode_factor
recode_factor(df$lhf,  lhf2 = "LHF 2", lhf1 = "LHF 1" )
head(df)
unique(df$lhf)
recode(df$lhf,  lhf2 = "LHF 2", lhf1 = "LHF 1" )
recode(df$lhf,  "LHF 2" = "lhf2", "LHF 1" = "lhf1" )
head(df)
df$lhf <- recode(df$lhf,  "LHF 2" = "lhf2", "LHF 1" = "lhf1" )
head(df)
df$total_arcing_time
minute(df$total_arcing_time)
library(GGally)
head(df)
# taking the only the minutes of arching
df$total_arcing_time <- minute(df$total_arcing_time)
head(df)
#-----------------------------------------------------------------------------
# Exploratory Data Analysis
#-----------------------------------------------------------------------------
df_mod <- df %>% select(-heat_no)
library(GGally)
ggpairs(data = df_mod)
range(df_mod$si)
df_mod %>% filter(si > 1)
length(df_mod$si)
my_id <- length(df_mod$si)
range(df_mod$mn)
sort(df_mod$mn)
df_mod %>% filter(mn > 1)
if(df_mod$si > 1) {
df_mod$si = df_mod$si/100
}
for(i in 1:my_id) {
if(df_mod$si > 1){
df_mod$si = df_mod$si/100
}
}
head(df_mod,30)
range(df_mod$si)
df_mod %>% filter(si > 1)
for(i in 1:my_id) {
if(df_mod$si[i] > 1){
df_mod$si[i] = df_mod$si/100
}
}
for(i in 1:my_id) {
if(df_mod$si[i] > 1){
df_mod$si[i] = df_mod$si[i]/100
}
}
df_mod %>% filter(si > 1)
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
range(df_mod$mn)
ggpairs(data = df_mod)
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
range(df_mod$mn)
range(df_mod$si)
df_mod <- df%>% mutate (temp_increase = final_temp - initial_temp)
df_mod <- df%>% mutate (temp_increase = final_temp - initial_temp)
df_mod <- df_mod %>% select(-heat_no, - initial_temp, -final_temp)
head(df_mod)
ggpairs(df_mod)
ggplot(df_mod, aes(total_arcing_time)) + geom_histogram()
ggplot(df_mod, aes(total_arcing_time)) + geom_histogram(bins = 10)
names(df_mod)
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10)
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10)
h_temp_increase
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase)) +
geom_point(color = lhf) +
geom_smooth(method = "lm", se=F)
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase)) +
geom_point(color = "lhf") +
geom_smooth(method = "lm", se=F)
sct_t_a
head(df_mod)
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase)) +
geom_point(color = lhf) +
geom_smooth(method = "lm", se=F)
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase)) +
geom_point(aes(color = lhf)) +
geom_smooth(method = "lm", se=F)
sct_t_a
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point() +
geom_smooth(method = "lm", se=F)
sct_t_a
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point(position = "jitter") +
geom_smooth(method = "lm", se=F)
sct_t_a
ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point(position = "jitter") +
geom_smooth(method = "lm", se=F) +
ylab("Increase in Temperature") +
xlab("Total Arcing Time") +
lab(color = "LHF")
ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point(position = "jitter") +
geom_smooth(method = "lm", se=F) +
ylab("Increase in Temperature") +
xlab("Total Arcing Time") +
labs(color = "LHF")
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point(position = "jitter") +
geom_smooth(method = "lm", se=F) +
ylab("Increase in Temperature") +
xlab("Total Arcing Time") +
labs(color = "LHF")
sct_t_a
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "blue")
h_temp_increase
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
facet_grid(lhf ~ .)
h_arctime
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "blue") +
facet_grid(lhf ~ .)
h_temp_increase
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "pink") +
facet_grid(lhf ~ .)
h_temp_increase
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "cyan") +
facet_grid(lhf ~ .)
h_temp_increase
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "pink") +
facet_grid(lhf ~ .) +
theme_light()
h_temp_increase
h_arctime_area <- ggplot(df_mod, aes(total_arcing_time)) +
geom_area() +
facet_grid(lhf ~ .)
h_arctime_area
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
geom_density() +
facet_grid(lhf ~ .)
h_arctime
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
geom_freqpoly(bins = 10) +
facet_grid(lhf ~ .)
h_arctime
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
geom_freqpoly(bins = 10, color = "blue", size = 1.1) +
facet_grid(lhf ~ .)
h_arctime
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
geom_freqpoly(bins = 10, color = "blue", size = 0.8) +
facet_grid(lhf ~ .)
h_arctime
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
geom_freqpoly(bins = 10, color = "blue", size = 0.7, alpha =.5) +
facet_grid(lhf ~ .)
h_arctime
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
geom_freqpoly(bins = 10, color = "blue", size = 0.85, alpha =.7) +
facet_grid(lhf ~ .)
h_arctime
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "pink") +
facet_grid(lhf ~ .)
h_temp_increase
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
facet_grid(lhf ~ .)
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="white", color = "pink") +
facet_grid(lhf ~ .)
h_arctime
h_temp_increase
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="light blue", color = "red") +
facet_grid(lhf ~ .)
h_temp_increase
head(df_mod)
df_mod2 <- df_mod %>% gather(key = c("c", "si", "mn", "s"),
value = "Chemistry")
df_mod2 <- df_mod %>% gather(key = c("c", "si", "mn", "s"),
value = Chemistry)
df_mod2 <- df_mod %>% gather("c", "mn", "si", "s", key = "key", value = "value")
df_mod2
df_mod2 <- df_mod %>% gather("c", "mn", "si", "s",
key = "key", value = "Chemistry")
head(df2)
head(df_mod2)
df_mod2 <- df_mod %>% gather("c", "mn", "si", "s",
key = "Elements", value = "Chemistry")
head(df_mod2)
unique(df_mod2$Elements)
b_plot <- ggplot(df_mod2, aes(Elements, Chemistry)) +
geom_point(color = "blue", alpha = .3, position = "jitter") +
geom_boxplot()
b_plot
df <- as.data.frame(df)
# selectig the columns LHF & from 2 to 12
df <- df %>% select(LHF, 2:12)
# only taking the complete data set
df <- subset(df, complete.cases(df))
# changing the variable names
mynames <- c("LHF", "Heat_No", "LADLE_IN", "ARCING_START", "ARCING_END",
"INITIAL_TEMP", "FINAL_TEMP","Total_arcing_time",
"C", "Si", "Mn", "S")
mynames <- tolower(mynames)
names(df) <- mynames
# taking the only the part of the data set in which EDA will be done
df <- df %>% select("lhf", "heat_no", "initial_temp", "final_temp",
"total_arcing_time", "c", "si", "mn", "s")
# recoding the factor lhf 2 and 1
df$lhf <- recode(df$lhf,  "LHF 2" = "lhf2", "LHF 1" = "lhf1" )
# taking the only the minutes of arching
df$total_arcing_time <- minute(df$total_arcing_time)
df_mod <- df%>% mutate (temp_increase = final_temp - initial_temp)
df_mod <- df_mod %>% select(-heat_no, - initial_temp, -final_temp)
my_id <- length(df_mod$si)
for(i in 1:my_id) {
if(df_mod$si[i] > 1){
df_mod$si[i] = df_mod$si[i]/100
}
}
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point(position = "jitter") +
geom_smooth(method = "lm", se=F) +
ylab("Increase in Temperature") +
xlab("Total Arcing Time") +
labs(color = "LHF")
# histogram
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
facet_grid(lhf ~ .)
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="light blue", color = "red") +
facet_grid(lhf ~ .)
# box_plot
df_mod2 <- df_mod %>% gather("c", "mn", "si", "s",
key = "Elements", value = "Chemistry")
b_plot <- ggplot(df_mod2, aes(Elements, Chemistry)) +
geom_point(color = "blue", alpha = .3, position = "jitter") +
geom_boxplot()
b_plot
df_mod2 <- df_mod %>% gather("c", "si", "s",
key = "Elements", value = "Chemistry")
b_plot <- ggplot(df_mod2, aes(Elements, Chemistry)) +
geom_point(color = "blue", alpha = .3, position = "jitter") +
geom_boxplot()
b_plot
df_mod2 <- df_mod %>% gather("c", "si",
key = "Elements", value = "Chemistry")
b_plot <- ggplot(df_mod2, aes(Elements, Chemistry)) +
geom_point(color = "blue", alpha = .3, position = "jitter") +
geom_boxplot()
b_plot
ggplot(df_mod2, aes(Elements)) +
geom_density()
ggplot(df_mod2, aes(Elements)) +
geom_area()
ggplot(df_mod2, aes(Elements, Chemistry)) +
geom_area()
ggplot(df_mod2, aes(Chemistry)) +
geom_density( aes(color = Elements))
ggplot(df_mod2, aes(Chemistry)) +
geom_density( aes(color = Elements, fill = Elements))
ggplot(df_mod2, aes(x = Chemistry,
color = Elements, fill = Elements)) +
geom_density(alpha = .3)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(lubridate)
# data is in the data folder of the workig directory
df <- read_excel("data/aprildata.xlsx")
# converting the data set from tibble to data frame
df <- as.data.frame(df)
# selectig the columns LHF & from 2 to 12
df <- df %>% select(LHF, 2:12)
# only taking the complete data set
df <- subset(df, complete.cases(df))
# changing the variable names
mynames <- c("LHF", "Heat_No", "LADLE_IN", "ARCING_START", "ARCING_END",
"INITIAL_TEMP", "FINAL_TEMP","Total_arcing_time",
"C", "Si", "Mn", "S")
mynames <- tolower(mynames)
names(df) <- mynames
# taking the only the part of the data set in which EDA will be done
df <- df %>% select("lhf", "heat_no", "initial_temp", "final_temp",
"total_arcing_time", "c", "si", "mn", "s")
# recoding the factor lhf 2 and 1
df$lhf <- recode(df$lhf,  "LHF 2" = "lhf2", "LHF 1" = "lhf1" )
# taking the only the minutes of arching
df$total_arcing_time <- minute(df$total_arcing_time)
# data is in the data folder of the workig directory
df <- read_excel("data/aprildata.xlsx")
# converting the data set from tibble to data frame
df <- as.data.frame(df)
# selectig the columns LHF & from 2 to 12
df <- df %>% select(LHF, 2:12)
# only taking the complete data set
df <- subset(df, complete.cases(df))
# changing the variable names
mynames <- c("LHF", "Heat_No", "LADLE_IN", "ARCING_START", "ARCING_END",
"INITIAL_TEMP", "FINAL_TEMP","Total_arcing_time",
"C", "Si", "Mn", "S")
mynames <- tolower(mynames)
names(df) <- mynames
# taking the only the part of the data set in which EDA will be done
df <- df %>% select("lhf", "heat_no", "initial_temp", "final_temp",
"total_arcing_time", "c", "si", "mn", "s")
# recoding the factor lhf 2 and 1
df$lhf <- recode(df$lhf,  "LHF 2" = "lhf2", "LHF 1" = "lhf1" )
# taking the only the minutes of arching
df$total_arcing_time <- minute(df$total_arcing_time)
# creating columns of temp_increase
df_mod <- df%>% mutate (temp_increase = final_temp - initial_temp)
df_mod <- df_mod %>% select(-heat_no, - initial_temp, -final_temp)
head(df_mod, 10)
my_id <- length(df_mod$si)
for(i in 1:my_id) {
if(df_mod$si[i] > 1){
df_mod$si[i] = df_mod$si[i]/100
}
}
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(lubridate)
# data is in the data folder of the workig directory
df <- read_excel("data/aprildata.xlsx")
# converting the data set from tibble to data frame
df <- as.data.frame(df)
# selectig the columns LHF & from 2 to 12
df <- df %>% select(LHF, 2:12)
# only taking the complete data set
df <- subset(df, complete.cases(df))
# changing the variable names
mynames <- c("LHF", "Heat_No", "LADLE_IN", "ARCING_START", "ARCING_END",
"INITIAL_TEMP", "FINAL_TEMP","Total_arcing_time",
"C", "Si", "Mn", "S")
mynames <- tolower(mynames)
names(df) <- mynames
# taking the only the part of the data set in which EDA will be done
df <- df %>% select("lhf", "heat_no", "initial_temp", "final_temp",
"total_arcing_time", "c", "si", "mn", "s")
# recoding the factor lhf 2 and 1
df$lhf <- recode(df$lhf,  "LHF 2" = "lhf2", "LHF 1" = "lhf1" )
# taking the only the minutes of arching
df$total_arcing_time <- minute(df$total_arcing_time)
# creating columns of temp_increase
df_mod <- df%>% mutate (temp_increase = final_temp - initial_temp)
df_mod <- df_mod %>% select(-heat_no, - initial_temp, -final_temp)
head(df_mod, 10)
my_id <- length(df_mod$si)
for(i in 1:my_id) {
if(df_mod$si[i] > 1){
df_mod$si[i] = df_mod$si[i]/100
}
}
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
for(i in 1:my_id) {
if(df_mod$mn[i] > 3){
df_mod$mn[i] = df_mod$mn[i]/10
}
}
# make basic scatter plot of arcing time vs temperature increase
sct_t_a <- ggplot(df_mod, aes(total_arcing_time,
temp_increase, color = lhf)) +
geom_point(position = "jitter") +
geom_smooth(method = "lm", se=F) +
ylab("Increase in Temperature") +
xlab("Total Arcing Time") +
labs(color = "LHF")
print(sct_t_a)
# histogram
h_arctime <- ggplot(df_mod, aes(total_arcing_time)) +
geom_histogram(bins = 10) +
facet_grid(lhf ~ .)
print(h_arctime)
h_temp_increase <- ggplot(df_mod, aes(temp_increase)) +
geom_histogram(bins = 10, fill="light blue", color = "red") +
facet_grid(lhf ~ .)
print(h_temp_increase)
# box_plot
df_mod2 <- df_mod %>% gather("c", "si",
key = "Elements", value = "Chemistry")
b_plot <- ggplot(df_mod2, aes(Elements, Chemistry)) +
geom_point(color = "blue", alpha = .3, position = "jitter") +
geom_boxplot()
print(b_plot )
d_plot <- ggplot(df_mod2, aes(x = Chemistry,
color = Elements, fill = Elements)) +
geom_density(alpha = .3)
print(d_plot)
ggpairs(df_mod2)
ggpairs(df_mod2)
ggpairs(df_mod2)
